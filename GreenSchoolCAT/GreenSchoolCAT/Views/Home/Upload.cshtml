@model GreenSchoolCAT.Models.TestUploadViewModel
@{
    ViewData["Title"] = "ტესტის ატვირთვა";
}
@if (ViewBag.ErrorMessage != null)
{
    <div class="alert alert-danger alert-dismissible fade show" role="alert">
        @ViewBag.ErrorMessage
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}
<div class="container mt-4">
    <div class="card shadow">
        <div class="card-header bg-success text-white">
            <h2 class="text-center mb-0">ტესტის ატვირთვა</h2>
        </div>
        <div class="card-body">
            <form asp-action="Upload" method="post" enctype="multipart/form-data" class="needs-validation" novalidate>
                <div class="mb-3">
                    <label asp-for="Name" class="form-label">ტესტის სახელი</label>
                    <input asp-for="Name" class="form-control" placeholder="შეიყვანეთ ტესტის სახელი" required />
                    <span asp-validation-for="Name" class="invalid-feedback"></span>
                </div>

                <div class="mb-3">
                    <label asp-for="Password" class="form-label">პაროლი</label>
                    <input asp-for="Password" type="text" class="form-control" placeholder="შეიყვანეთ პაროლი" required />
                    <span asp-validation-for="Password" class="invalid-feedback"></span>
                </div>

                <div class="mb-3">
                    <label asp-for="ExcelFile" class="form-label">Excel ფაილი</label>
                    <input asp-for="ExcelFile" type="file" class="form-control" accept=".xlsx,.xls" required />
                    <div class="form-text">მხოლოდ Excel ფორმატი (.xlsx, .xls)</div>
                    <span asp-validation-for="ExcelFile" class="invalid-feedback"></span>
                </div>

                <div class="d-grid gap-2 mt-4">
                    <button type="submit" class="btn btn-success btn-lg">
                        <i class="bi bi-upload me-2"></i>ატვირთვა
                    </button>
                </div>
            </form>
        </div>
    </div>
</div>



@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script>
        (function() {
            'use strict';

            const form = document.querySelector('.needs-validation');

            form.addEventListener('submit', function(event) {
                if (!form.checkValidity()) {
                    event.preventDefault();
                    event.stopPropagation();
                }

                form.classList.add('was-validated');
            }, false);

            document.querySelector('[asp-for="Name"]').addEventListener('invalid', function() {
                this.setCustomValidity('ტესტის სახელის შეყვანა აუცილებელია');
            });

            document.querySelector('[asp-for="Password"]').addEventListener('invalid', function() {
                this.setCustomValidity('პაროლის შეყვანა აუცილებელია');
            });

            document.querySelector('[asp-for="ExcelFile"]').addEventListener('invalid', function() {
                this.setCustomValidity('Excel ფაილის ატვირთვა აუცილებელია');
            });

            document.querySelectorAll('input').forEach(input => {
                input.addEventListener('input', function() {
                    this.setCustomValidity('');
                });
            });
        })();
    </script>
}