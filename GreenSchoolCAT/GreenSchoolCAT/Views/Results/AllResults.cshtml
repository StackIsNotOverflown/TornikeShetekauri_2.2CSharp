@using GreenSchoolCAT.Models
@model IEnumerable<AllResultsViewModel>

<div class="container mt-4">
    <div class="search-container mb-3">
        <div class="input-group">
            <span class="input-group-text bg-success text-white">
                <i class="bi bi-search"></i>
            </span>
            <input type="text" id="searchInput" class="form-control search-bar border-success" placeholder="ტესტის ძებნა..." autocomplete="off">
        </div>
    </div>

    <div class="card shadow-sm">
        <div class="card-header bg-success text-white">
            <h5 class="mb-0">ყველა შედეგი</h5>
        </div>
        <div class="card-body p-0">
            <div class="table-responsive">
                <table class="table table-hover mb-0">
                    <thead class="table-light">
                        <tr>
                            <th>ტესტის სახელი</th>
                            <th>პაროლი</th>
                            <th>მასწავლებელი</th>
                            <th>სტუდენტი</th>
                            <th>ქულა</th>
                            <th>θ მაჩვენებელი</th>
                            <th>თარიღი</th>
                        </tr>
                    </thead>
                    <tbody id="resultsTable">
                        @foreach (var r in Model)
                        {
                            <tr class="test-row">
                                <td class="test-name">@r.TestName</td>
                                <td>@r.TestPassword</td>
                                <td>@r.TeacherName</td>
                                <td>@r.StudentName</td>
                                <td>@r.Score</td>
                                <td>@r.Theta.ToString("0.00")</td>
                                <td>@r.DateTaken.ToLocalTime().ToString("g")</td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        function initializeTestSearch() {
            const searchInput = document.getElementById('searchInput');
            const testRows = document.querySelectorAll('.test-row');

            searchInput.addEventListener('input', function() {
                const searchTerm = this.value.toLowerCase();
                let hasResults = false;

                testRows.forEach(row => {
                    const testName = row.querySelector('.test-name').textContent.toLowerCase();
                    const studentName = row.querySelectorAll('td')[3].textContent.toLowerCase();

                    if (testName.includes(searchTerm) || studentName.includes(searchTerm)) {
                        row.style.display = '';
                        hasResults = true;
                    } else {
                        row.style.display = 'none';
                    }
                });

                const noResultsRow = document.getElementById('noResultsRow');
                if (!hasResults && searchTerm !== '') {
                    if (!noResultsRow) {
                        const tbody = document.getElementById('resultsTable');
                        const tr = document.createElement('tr');
                        tr.id = 'noResultsRow';
                        tr.innerHTML = '<td colspan="7" class="text-center py-3 text-muted">ვერ მოიძებნა</td>';
                        tbody.appendChild(tr);
                    }
                } else if (noResultsRow) {
                    noResultsRow.remove();
                }
            });
        }

        document.addEventListener('DOMContentLoaded', initializeTestSearch);
    </script>
}